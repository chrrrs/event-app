{"version":3,"sources":["pages/Dashboard.js","store/actions/eventActions.js","store/actions/authActions.js","pages/Login.js","pages/Signup.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/eventReducer.js","store/reducers/rootReducer.js","config/firebase.js","index.js"],"names":["Dashboard","state","title","content","file","handleChange","e","_this","setState","Object","defineProperty","target","id","value","handleFile","files","handleSubmit","preventDefault","_this$state","length","props","createEvent","deleteEventHandler","pId","deleteEvent","handleParticipant","addParticipant","removeParticipation","removeParticipant","_this2","this","_this$props","auth","profile","uid","react_default","a","createElement","onSubmit","type","onChange","projects","map","project","key","src","image","alt","authorId","onClick","style","color","participants","filter","userId","Link","to","signOut","display","justifyContent","width","alignItems","margin","borderRadius","backgroundColor","padding","initials","firstName","lastName","Redirect","Component","compose","connect","firestore","ordered","events","firebase","dispatch","event","getState","_ref","getFirebase","getFirestore","ref","storage","child","concat","name","blob","put","then","snapshot","getDownloadURL","downloadURL","collection","add","authorFirstName","authorLastName","createdAt","Date","catch","err","_ref2","doc","delete","_ref3","user","userFirstName","userLastName","update","FieldValue","arrayUnion","_ref4","arrayRemove","firestoreConnect","orderBy","Login","email","password","signIn","history","push","authError","creds","credentials","signInWithEmailAndPassword","withRouter","Signup","signUp","newUser","createUserWithEmailAndPassword","res","set","points","App","BrowserRouter","className","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","initState","authReducer","arguments","undefined","action","console","log","objectSpread","message","eventReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","cfgFirebase","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc264189.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createEvent, deleteEvent, addParticipant, removeParticipant } from '../store/actions/eventActions';\r\nimport { signOut } from '../store/actions/authActions';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        file: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n    }\r\n\r\n    handleFile = (e) => {\r\n        this.setState({ \r\n            file: e.target.files[0] \r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { title, content, file } = this.state;\r\n        \r\n        if( title.length > 0 && content.length > 0 && file !== '') {\r\n            this.props.createEvent(this.state)\r\n    \r\n            this.setState({\r\n                title: '',\r\n                content: '',\r\n                file: ''\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    deleteEventHandler = (pId) => {\r\n        this.props.deleteEvent(pId)\r\n    }\r\n\r\n    handleParticipant = (pId) => {\r\n        this.props.addParticipant(pId)\r\n    }\r\n\r\n    removeParticipation = (pId) => {\r\n        this.props.removeParticipant(pId)\r\n    }\r\n\r\n    render() {\r\n        const { auth, profile } = this.props;\r\n        // console.log(this.props)\r\n\r\n        if (!auth.uid) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n        return (\r\n            <div>\r\n                This is the dashboard\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"file\" id=\"file\" onChange={this.handleFile} />\r\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title} />\r\n                    <input type=\"text\" id=\"content\" onChange={this.handleChange} value={this.state.content} />\r\n                    <button>create event</button>\r\n                </form>\r\n                <div>\r\n                    {\r\n                        this.props.projects && this.props.projects.map(project => {\r\n                            const pId = project.id;\r\n                            return( \r\n                                <div key={project.id}>\r\n                                    <img src={project.image} alt={project.title} />\r\n                                    <p><b>{project.title}</b></p>\r\n                                    <p>{project.content}</p>\r\n                                    {\r\n                                        project.authorId === auth.uid &&\r\n                                        <p onClick={ () => this.deleteEventHandler(pId)} style={{ color: 'red' }}>delete event</p>\r\n                                    }\r\n                                    {\r\n                                        // project.participants.filter(e => e.userId === auth.uid).length > 0\r\n                                        project.participants.filter(e => e.userId === auth.uid).length > 0 ?\r\n                                        <p onClick={() => this.removeParticipation(pId)}>leave event</p> :\r\n                                        <p onClick={() => this.handleParticipant(pId)}>join event</p>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Link to=\"/login\">\r\n                    <div onClick={this.props.signOut}>Sign Out</div>\r\n                </Link>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', width: '20%', alignItems: 'center', margin: '0 auto'}}>\r\n                    <div>\r\n                        <div style={{ borderRadius: '100px', backgroundColor: 'grey', padding: '5px'}}>\r\n                            {profile.initials}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <p>{profile.firstName}</p>\r\n                        <p>{profile.lastName}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state)\r\n    return {\r\n        projects: state.firestore.ordered.events,\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createEvent: (event) => dispatch(createEvent(event)),\r\n        deleteEvent: (event) => dispatch(deleteEvent(event)),\r\n        addParticipant: (event) => dispatch(addParticipant(event)),\r\n        removeParticipant: (event) => dispatch(removeParticipant(event)),\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    firestoreConnect([\r\n        { collection: 'events', orderBy: ['createdAt', 'desc'] }\r\n    ])\r\n)(Dashboard);","import firebase from 'firebase/storage';\r\n\r\nexport const createEvent = (event) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        const test = getFirebase()\r\n        const storage = test.storage()\r\n        const storageRef = storage.ref()\r\n        const ref = storageRef.child(`images/${event.file.name}`)\r\n        const blob = event.file;\r\n\r\n        ref.put(blob)\r\n            .then(snapshot => snapshot.ref.getDownloadURL())\r\n            .then(downloadURL => {\r\n                firestore.collection('events').add({\r\n                    title: event.title,\r\n                    content: event.content,\r\n                    image: downloadURL,\r\n                    authorFirstName: profile.firstName,\r\n                    authorLastName: profile.lastName,\r\n                    authorId: authorId,\r\n                    createdAt: new Date(),\r\n                    participants: []\r\n                }).then(() => {\r\n                    dispatch({ type: 'CREATE_EVENT', event });\r\n                }).catch( err => {\r\n                    dispatch({ type: 'CREATE_EVENT_ERROR', err });\r\n                })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const deleteEvent = (event) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n\r\n        firestore.collection('events').doc(event).delete().then(() => {\r\n            dispatch({ type: 'DELETE_EVENT', event })\r\n        }).catch( err => {\r\n            dispatch({ type: 'DELETE_EVENT_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const addParticipant = (event) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        const user = {\r\n            userFirstName: profile.firstName,\r\n            userLastName: profile.lastName,\r\n            userId: userId\r\n        }\r\n        \r\n        firestore.collection('events').doc(event).update({\r\n            participants: firestore.FieldValue.arrayUnion(user)\r\n        }).then(() => {\r\n            dispatch({ type: 'ADD_PARTICIPANT', profile })\r\n        }).catch( err => {\r\n            dispatch({ type: 'ADD_PARTICIPANT_ERROR', err })\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeParticipant = (event) => {\r\n    return (dispatch, getState, { getFirestore }) => {\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const userId = getState().firebase.auth.uid;\r\n\r\n        const user = {\r\n            userFirstName: profile.firstName,\r\n            userLastName: profile.lastName,\r\n            userId: userId\r\n        }\r\n\r\n        firestore.collection('events').doc(event).update({\r\n            participants: firestore.FieldValue.arrayRemove(user)\r\n        }).then(() => {\r\n            dispatch({ type: 'REMOVE_PARTICIPANT', profile })\r\n        }).catch(err => {\r\n            dispatch({ type: 'REMOVE_PARTICIPANT_ERROR', err })\r\n        })\r\n    }\r\n}","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch( err => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0],\r\n                points: 0\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../store/actions/authActions';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.signIn(this.state)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { authError, auth } = this.props\r\n\r\n        if(auth.uid) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\r\n                <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\r\n                <button>Login</button>\r\n            </form>\r\n            {\r\n                authError ? \r\n                <p style={{ color: 'red' }}>{authError}</p>:\r\n                null\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../store/actions/authActions';\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n\r\n        if(auth.uid) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" id=\"email\" onChange={this.handleChange} />\r\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    <button>signup</button>\r\n                </form>\r\n                {\r\n                    authError ?\r\n                        <p style={{ color: 'red' }}>{authError}</p> :\r\n                        null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\n\r\nimport Dashboard from './pages/Dashboard';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/signup\" component={Signup} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('login success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup failed')\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'test 1', content: 'text for test 1'},\r\n        {id: '2', title: 'test 2', content: 'text for test 2'},\r\n        {id: '3', title: 'test 3', content: 'text for test 3'}\r\n    ]\r\n}\r\n\r\nconst eventReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_EVENT':\r\n            console.log('created event', action.event)\r\n            return state;\r\n        case 'CREATE_EVENT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state;\r\n        case 'DELETE_EVENT':\r\n            console.log('deleted event', action.event)\r\n            return state;\r\n        case 'DELETE_EVENT_ERROR':\r\n            console.log('delete event error', action.err)\r\n            return state;\r\n        case 'ADD_PARTICIPANT':\r\n            console.log('added participant', action.event)\r\n            return state;\r\n        case 'ADD_PARTICIPANT_ERROR':\r\n            console.log('added participant error', action.err)\r\n            return state;\r\n        case 'REMOVE_PARTICIPANT':\r\n            console.log('removed participant', action.event)\r\n            return state;\r\n        case 'REMOVE_PARTICIPANT_ERROR':\r\n            console.log('removed participant error', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default eventReducer","import authReducer from './authReducer';\r\nimport eventReducer from './eventReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    event: eventReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBydd68ex9-vN-aRT9IM4huWE_wDuWn28o\",\r\n    authDomain: \"event-webapp-bc94d.firebaseapp.com\",\r\n    databaseURL: \"https://event-webapp-bc94d.firebaseio.com\",\r\n    projectId: \"event-webapp-bc94d\",\r\n    storageBucket: \"event-webapp-bc94d.appspot.com\",\r\n    messagingSenderId: \"552374337223\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\r\nimport cfgFirebase from './config/firebase';\r\n\r\nconst store = createStore(rootReducer, \r\n    compose(\r\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n        reduxFirestore(cfgFirebase),\r\n        reactReduxFirebase(cfgFirebase, { \r\n            useFirestoreForProfile: true,\r\n            userProfile: 'users', \r\n            attachAuthIsReady: true \r\n        })\r\n    )\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(() => {\r\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n    \r\n    // If you want your app to work offline and load faster, you can change\r\n    // unregister() to register() below. Note this comes with some pitfalls.\r\n    // Learn more about service workers: http://bit.ly/CRA-PWA\r\n    serviceWorker.unregister();\r\n})\r\n\r\n"],"sourceRoot":""}